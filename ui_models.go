package main

import (
	"fmt"
	"path/filepath"
	"time"

	tea "github.com/charmbracelet/bubbletea"
	"github.com/charmbracelet/bubbles/list"
	"github.com/charmbracelet/bubbles/progress"
)

// updateWelcome –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –≤ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
func (a *App) updateWelcome(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.dataService.Stop()
		return a, tea.Quit
	case "enter", " ":
		a.state = StateMenu
		return a, nil
	}
	return a, nil
}

// updateMenu –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ –º–µ–Ω—é
func (a *App) updateMenu(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.dataService.Stop()
		return a, tea.Quit
		
	case "enter":
		selected := a.menu.list.SelectedItem()
		if item, ok := selected.(menuItem); ok {
			switch item.title {
			case "üîã –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–∞—Ç–∞—Ä–µ–∏ (100% ‚Üí 0%)":
				a.state = StateDashboard
				a.initDashboard()
			case "‚ö° –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞":
				a.state = StateQuickDiag
				a.initQuickDiag()
			case "üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç":
				a.state = StateReport
				a.initReport()
			case "üìÑ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤":
				a.state = StateExport
			case "üóëÔ∏è  –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
				a.state = StateSettings
			case "‚ùì –°–ø—Ä–∞–≤–∫–∞":
				a.state = StateHelp
			case "‚ùå –í—ã—Ö–æ–¥":
				a.dataService.Stop()
				return a, tea.Quit
			}
		}
	}
	
	var cmd tea.Cmd
	a.menu.list, cmd = a.menu.list.Update(msg)
	return a, cmd
}

// updateDashboard –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ –¥–∞—à–±–æ—Ä–¥–µ
func (a *App) updateDashboard(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.state = StateMenu
		a.dashboardScrollY = 0 // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
		return a, nil
	case "r", "–∫":
		return a, updateData(a.dataService)
	case "h", "—Ä":
		// –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é —Å–ø—Ä–∞–≤–∫—É (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ–∑–∂–µ)
		return a, nil
	case "up", "k", "–ª":
		// –°–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö
		if a.dashboardScrollY > 0 {
			a.dashboardScrollY--
		}
		return a, nil
	case "down", "j", "–æ":
		// –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ (–º–∞–∫—Å–∏–º—É–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ renderDashboard)
		maxScroll := a.calculateMaxDashboardScroll()
		if a.dashboardScrollY < maxScroll {
			a.dashboardScrollY++
		}
		return a, nil
	}
	return a, nil
}

// updateReport –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
func (a *App) updateReport(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.state = StateMenu
		a.reportScrollY = 0 // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
		return a, nil
	case "up":
		if a.report.activeTab == 3 { // –í —Ç–∞–±–µ –ò—Å—Ç–æ—Ä–∏—è
			// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–ª–∏—Ü–µ
			a.reportScrollY--
			if a.reportScrollY < 0 {
				a.reportScrollY = 0
			}
		} else {
			if a.reportScrollY > 0 {
				a.reportScrollY--
			}
		}
	case "down":
		if a.report.activeTab == 3 { // –í —Ç–∞–±–µ –ò—Å—Ç–æ—Ä–∏—è
			// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–ª–∏—Ü–µ
			a.reportScrollY++
		} else {
			a.reportScrollY++
		}
	case "left", "a", "—Ñ":
		// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–∫–ª–∞–¥–∫—É
		if a.report.activeTab > 0 {
			a.report.activeTab--
			a.reportScrollY = 0
		}
	case "right", "d", "–≤":
		// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
		if a.report.activeTab < 3 { // 4 –≤–∫–ª–∞–¥–∫–∏ –≤—Å–µ–≥–æ (0-3)
			a.report.activeTab++
			a.reportScrollY = 0
		}
	case "1":
		a.report.activeTab = 0
		a.reportScrollY = 0
	case "2":
		a.report.activeTab = 1
		a.reportScrollY = 0
	case "3":
		a.report.activeTab = 2
		a.reportScrollY = 0
	case "4":
		a.report.activeTab = 3
		a.reportScrollY = 0
	}
	return a, nil
}

// updateQuickDiag –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
func (a *App) updateQuickDiag(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.state = StateMenu
		return a, nil
	}
	return a, nil
}

// updateExport –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ —ç–∫—Å–ø–æ—Ä—Ç–∞
func (a *App) updateExport(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.state = StateMenu
		a.exportStatus = "" // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
		return a, nil
	case "enter":
		// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –≤ Documents
		documentsDir, err := getDocumentsDir()
		if err != nil {
			// Fallback –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
			documentsDir = "."
		}
		filename := filepath.Join(documentsDir, fmt.Sprintf("batmon_report_%s.html", time.Now().Format("2006-01-02")))
		a.exportStatus = "–≠–∫—Å–ø–æ—Ä—Ç –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ..."
		a.exportToHTMLAsync(filename)
		return a, nil
	}
	return a, nil
}

// updateSettings –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
func (a *App) updateSettings(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π", "n", "N", "–Ω", "–ù":
		a.state = StateMenu
		return a, nil
	case "y", "Y", "–¥", "–î":
		err := a.clearDatabase()
		if err != nil {
			a.lastError = fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ë–î: %v", err)
		} else {
			a.lastError = nil
		}
		a.state = StateMenu
		return a, nil
	}
	return a, nil
}

// updateHelp –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ —Å–ø—Ä–∞–≤–∫–∏
func (a *App) updateHelp(msg tea.KeyMsg) (tea.Model, tea.Cmd) {
	switch msg.String() {
	case "ctrl+c", "q", "–π":
		a.state = StateMenu
		return a, nil
	}
	return a, nil
}

// updateComponentSizes –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
func (a *App) updateComponentSizes() {
	// –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞ –º–µ–Ω—é
	a.menu.list.SetSize(a.windowWidth-2, a.windowHeight-4)
	
	// –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ dashboard
	if a.state == StateDashboard {
		// –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
		progressWidth := (a.windowWidth / 2) - 20
		if progressWidth < 20 {
			progressWidth = 20
		}
		if progressWidth > 40 {
			progressWidth = 40
		}
		
		// –û–±–Ω–æ–≤–ª—è–µ–º —à–∏—Ä–∏–Ω—É –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
		a.dashboard.batteryGauge = progress.New(
			progress.WithDefaultGradient(),
			progress.WithWidth(progressWidth),
		)
		a.dashboard.wearGauge = progress.New(
			progress.WithScaledGradient("#00ff00", "#ff0000"),
			progress.WithWidth(progressWidth),
		)
	}
}

// updateDashboardData –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞
func (a *App) updateDashboardData() {
	a.dashboard.lastUpdate = time.Now()
	a.dashboard.updating = false
}

// calculateMaxDashboardScroll —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
func (a *App) calculateMaxDashboardScroll() int {
	// –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –¥–∞—à–±–æ—Ä–¥–µ
	baseLines := 35 // –±–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
	if len(a.measurements) > 10 {
		baseLines += (len(a.measurements) - 10) / 5 // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ —Å—Ç—Ä–æ–∫–µ –∑–∞ –∫–∞–∂–¥—ã–µ 5 –∏–∑–º–µ—Ä–µ–Ω–∏–π
	}
	
	maxScroll := baseLines - (a.windowHeight - 5)
	if maxScroll < 0 {
		return 0
	}
	return maxScroll
}

// exportToHTMLAsync –≤—ã–ø–æ–ª–Ω—è–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –≤ HTML –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
func (a *App) exportToHTMLAsync(filename string) {
	go func() {
		// –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
		db, err := initDB(getDBPath())
		if err != nil {
			a.exportStatus = "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"
			return
		}
		defer db.Close()
		
		// –í—ã–ø–æ–ª–Ω—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç
		err = runExportMode("", filename, true)
		if err != nil {
			a.exportStatus = fmt.Sprintf("–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: %v", err)
		} else {
			a.exportStatus = fmt.Sprintf("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω: %s", filename)
		}
	}()
}

// initDashboard –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞—à–±–æ—Ä–¥
func (a *App) initDashboard() {
	a.dashboard.batteryGauge = progress.New(
		progress.WithDefaultGradient(),
		progress.WithWidth(30),
	)
	a.dashboard.wearGauge = progress.New(
		progress.WithScaledGradient("#00ff00", "#ff0000"),
		progress.WithWidth(30),
	)
	a.dashboard.lastUpdate = time.Now()
	a.dashboard.updating = false
	a.dashboardScrollY = 0
}

// initReport –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç
func (a *App) initReport() {
	a.report.activeTab = 0
	a.reportScrollY = 0
}

// initQuickDiag –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±—ã—Å—Ç—Ä—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
func (a *App) initQuickDiag() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
}

// initMenu –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func (a *App) initMenu() {
	menuItems := []list.Item{
		menuItem{title: "üîã –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–∞—Ç–∞—Ä–µ–∏ (100% ‚Üí 0%)", desc: "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏ 100% –∑–∞—Ä—è–¥–µ, —Ä–∞–∑—Ä—è–¥–∏—Ç–µ –¥–æ 0% –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"},
		menuItem{title: "‚ö° –ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", desc: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞—Ç–∞—Ä–µ–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"},
		menuItem{title: "üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç", desc: "–ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏"},
		menuItem{title: "üìÑ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤", desc: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Markdown –∏–ª–∏ HTML —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏"},
		menuItem{title: "üóëÔ∏è  –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", desc: "–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è (–Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ)"},
		menuItem{title: "‚ùì –°–ø—Ä–∞–≤–∫–∞", desc: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±–∞—Ç–∞—Ä–µ–∏"},
		menuItem{title: "‚ùå –í—ã—Ö–æ–¥", desc: "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã"},
	}
	
	menuList := list.New(menuItems, list.NewDefaultDelegate(), 0, 0)
	menuList.Title = "üîã BatMon - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–∞—Ç–∞—Ä–µ–∏ MacBook"
	
	a.menu.list = menuList
}